// Code generated by protoc-gen-validate
// source: hello.proto
// DO NOT EDIT!!!

#include "hello.pb.validate.h"

#include <google/protobuf/message.h>
#include <google/protobuf/util/time_util.h>
#include "re2/re2.h"

namespace pgv {

namespace protobuf = google::protobuf;
namespace protobuf_wkt = google::protobuf;

namespace validate {
using std::string;

// define the regex for a UUID once up-front
const re2::RE2 _uuidPattern("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");

pgv::Validator<::api::v1::HelloRequest> validator___api__v1__HelloRequest(static_cast<bool(*)(const ::api::v1::HelloRequest&, pgv::ValidationMsg*)>(::api::v1::Validate));
pgv::Validator<::api::v1::HelloResponse> validator___api__v1__HelloResponse(static_cast<bool(*)(const ::api::v1::HelloResponse&, pgv::ValidationMsg*)>(::api::v1::Validate));


} // namespace validate
} // namespace pgv


namespace api {
namespace v1 {


// Validate checks the field values on ::api::v1::HelloRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, the return value is false and an error message is written to the
// input string argument.

	

	

	

	

        

	

        

	



bool Validate(const ::api::v1::HelloRequest& m, pgv::ValidationMsg* err) {
	(void)m;
	(void)err;// no validation rules for name
		
	return true;
}

// Validate checks the field values on ::api::v1::HelloResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, the return value is false and an error message is written to the
// input string argument.

	

	

	

	

        

	

        

	



bool Validate(const ::api::v1::HelloResponse& m, pgv::ValidationMsg* err) {
	(void)m;
	(void)err;// no validation rules for message
		
	return true;
}


} // namespace
} // namespace

